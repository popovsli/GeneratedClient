//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClientConcurrencyAndInstancing.StockServiceClientProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockServiceClientProxy.IStockService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IStockService {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IStockService/GetPrice", ReplyAction="http://tempuri.org/IStockService/GetPriceResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WCFClientConcurrencyAndInstancing.StockServiceClientProxy.StockPrice GetPrice(string ticker);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IStockService/GetPrice", ReplyAction="http://tempuri.org/IStockService/GetPriceResponse")]
        System.IAsyncResult BeginGetPrice(string ticker, System.AsyncCallback callback, object asyncState);
        
        WCFClientConcurrencyAndInstancing.StockServiceClientProxy.StockPrice EndGetPrice(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StockPrice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double priceField;
        
        private int callsField;
        
        private string requestedByField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
                this.RaisePropertyChanged("price");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int calls {
            get {
                return this.callsField;
            }
            set {
                this.callsField = value;
                this.RaisePropertyChanged("calls");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RequestedBy {
            get {
                return this.requestedByField;
            }
            set {
                this.requestedByField = value;
                this.RaisePropertyChanged("RequestedBy");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockServiceChannel : WCFClientConcurrencyAndInstancing.StockServiceClientProxy.IStockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WCFClientConcurrencyAndInstancing.StockServiceClientProxy.StockPrice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WCFClientConcurrencyAndInstancing.StockServiceClientProxy.StockPrice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockServiceClient : System.ServiceModel.ClientBase<WCFClientConcurrencyAndInstancing.StockServiceClientProxy.IStockService>, WCFClientConcurrencyAndInstancing.StockServiceClientProxy.IStockService {
        
        private BeginOperationDelegate onBeginGetPriceDelegate;
        
        private EndOperationDelegate onEndGetPriceDelegate;
        
        private System.Threading.SendOrPostCallback onGetPriceCompletedDelegate;
        
        public StockServiceClient() {
        }
        
        public StockServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPriceCompletedEventArgs> GetPriceCompleted;
        
        public WCFClientConcurrencyAndInstancing.StockServiceClientProxy.StockPrice GetPrice(string ticker) {
            return base.Channel.GetPrice(ticker);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPrice(string ticker, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrice(ticker, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WCFClientConcurrencyAndInstancing.StockServiceClientProxy.StockPrice EndGetPrice(System.IAsyncResult result) {
            return base.Channel.EndGetPrice(result);
        }
        
        private System.IAsyncResult OnBeginGetPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ticker = ((string)(inValues[0]));
            return this.BeginGetPrice(ticker, callback, asyncState);
        }
        
        private object[] OnEndGetPrice(System.IAsyncResult result) {
            WCFClientConcurrencyAndInstancing.StockServiceClientProxy.StockPrice retVal = this.EndGetPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPriceCompleted(object state) {
            if ((this.GetPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPriceCompleted(this, new GetPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPriceAsync(string ticker) {
            this.GetPriceAsync(ticker, null);
        }
        
        public void GetPriceAsync(string ticker, object userState) {
            if ((this.onBeginGetPriceDelegate == null)) {
                this.onBeginGetPriceDelegate = new BeginOperationDelegate(this.OnBeginGetPrice);
            }
            if ((this.onEndGetPriceDelegate == null)) {
                this.onEndGetPriceDelegate = new EndOperationDelegate(this.OnEndGetPrice);
            }
            if ((this.onGetPriceCompletedDelegate == null)) {
                this.onGetPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPriceCompleted);
            }
            base.InvokeAsync(this.onBeginGetPriceDelegate, new object[] {
                        ticker}, this.onEndGetPriceDelegate, this.onGetPriceCompletedDelegate, userState);
        }
    }
}
