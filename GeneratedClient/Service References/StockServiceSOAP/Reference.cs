//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedClient.StockServiceSOAP {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Price", Namespace="http://EssentialWCF")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeneratedClient.StockServiceSOAP.StockPrice))]
    public partial class Price : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockPrice", Namespace="http://EssentialWCF")]
    [System.SerializableAttribute()]
    public partial class StockPrice : GeneratedClient.StockServiceSOAP.Price {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double testField;
        
        private double CurrentPriceField;
        
        private System.DateTime CurrentTimeField;
        
        private string TickerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DailyVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DaylyChangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double test {
            get {
                return this.testField;
            }
            set {
                if ((this.testField.Equals(value) != true)) {
                    this.testField = value;
                    this.RaisePropertyChanged("test");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public double CurrentPrice {
            get {
                return this.CurrentPriceField;
            }
            set {
                if ((this.CurrentPriceField.Equals(value) != true)) {
                    this.CurrentPriceField = value;
                    this.RaisePropertyChanged("CurrentPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime CurrentTime {
            get {
                return this.CurrentTimeField;
            }
            set {
                if ((this.CurrentTimeField.Equals(value) != true)) {
                    this.CurrentTimeField = value;
                    this.RaisePropertyChanged("CurrentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long DailyVolume {
            get {
                return this.DailyVolumeField;
            }
            set {
                if ((this.DailyVolumeField.Equals(value) != true)) {
                    this.DailyVolumeField = value;
                    this.RaisePropertyChanged("DailyVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public double DaylyChange {
            get {
                return this.DaylyChangeField;
            }
            set {
                if ((this.DaylyChangeField.Equals(value) != true)) {
                    this.DaylyChangeField = value;
                    this.RaisePropertyChanged("DaylyChange");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriceDetails", Namespace="http://schemas.datacontract.org/2004/07/EssentialWCF")]
    [System.SerializableAttribute()]
    public partial class PriceDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double AmountField;
        
        private string TickerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Ticker {
            get {
                return this.TickerField;
            }
            set {
                if ((object.ReferenceEquals(this.TickerField, value) != true)) {
                    this.TickerField = value;
                    this.RaisePropertyChanged("Ticker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockServiceSOAP.IStockService")]
    public interface IStockService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetDDS", ReplyAction="http://tempuri.org/IStockService/GetDDSResponse")]
        GeneratedClient.StockServiceSOAP.GetDDSResponse GetDDS(GeneratedClient.StockServiceSOAP.GetDDSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetDDS", ReplyAction="http://tempuri.org/IStockService/GetDDSResponse")]
        System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.GetDDSResponse> GetDDSAsync(GeneratedClient.StockServiceSOAP.GetDDSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPriceWithDDS", ReplyAction="http://tempuri.org/IStockService/GetPriceWithDDSResponse")]
        GeneratedClient.StockServiceSOAP.GetPriceWithDDSResponse GetPriceWithDDS(GeneratedClient.StockServiceSOAP.GetPriceWithDDSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPriceWithDDS", ReplyAction="http://tempuri.org/IStockService/GetPriceWithDDSResponse")]
        System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.GetPriceWithDDSResponse> GetPriceWithDDSAsync(GeneratedClient.StockServiceSOAP.GetPriceWithDDSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockService/OneWay")]
        void OneWay(GeneratedClient.StockServiceSOAP.OneWay request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStockService/OneWay")]
        System.Threading.Tasks.Task OneWayAsync(GeneratedClient.StockServiceSOAP.OneWay request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/NotOneWay", ReplyAction="http://tempuri.org/IStockService/NotOneWayResponse")]
        GeneratedClient.StockServiceSOAP.NotOneWayResponse NotOneWay(GeneratedClient.StockServiceSOAP.NotOneWayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/NotOneWay", ReplyAction="http://tempuri.org/IStockService/NotOneWayResponse")]
        System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.NotOneWayResponse> NotOneWayAsync(GeneratedClient.StockServiceSOAP.NotOneWayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockPrice", ReplyAction="http://tempuri.org/IStockService/GetStockPriceResponse")]
        GeneratedClient.StockServiceSOAP.GetStockPriceResponse GetStockPrice(GeneratedClient.StockServiceSOAP.GetStockPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockPrice", ReplyAction="http://tempuri.org/IStockService/GetStockPriceResponse")]
        System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.GetStockPriceResponse> GetStockPriceAsync(GeneratedClient.StockServiceSOAP.GetStockPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockPriceSOAP", ReplyAction="http://tempuri.org/IStockService/GetStockPriceSOAPResponse")]
        GeneratedClient.StockServiceSOAP.StockPriceSOAP GetStockPriceSOAP(GeneratedClient.StockServiceSOAP.StockPriceReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockPriceSOAP", ReplyAction="http://tempuri.org/IStockService/GetStockPriceSOAPResponse")]
        System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.StockPriceSOAP> GetStockPriceSOAPAsync(GeneratedClient.StockServiceSOAP.StockPriceReq request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDDS", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDDSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double price;
        
        public GetDDSRequest() {
        }
        
        public GetDDSRequest(double price) {
            this.price = price;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDDSResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDDSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double GetDDSResult;
        
        public GetDDSResponse() {
        }
        
        public GetDDSResponse(double GetDDSResult) {
            this.GetDDSResult = GetDDSResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPriceWithDDS", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPriceWithDDSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double price;
        
        public GetPriceWithDDSRequest() {
        }
        
        public GetPriceWithDDSRequest(double price) {
            this.price = price;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPriceWithDDSResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPriceWithDDSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double GetPriceWithDDSResult;
        
        public GetPriceWithDDSResponse() {
        }
        
        public GetPriceWithDDSResponse(double GetPriceWithDDSResult) {
            this.GetPriceWithDDSResult = GetPriceWithDDSResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OneWay", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class OneWay {
        
        public OneWay() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NotOneWay", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NotOneWayRequest {
        
        public NotOneWayRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NotOneWayResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class NotOneWayResponse {
        
        public NotOneWayResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockPrice", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ticker;
        
        public GetStockPriceRequest() {
        }
        
        public GetStockPriceRequest(string ticker) {
            this.ticker = ticker;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStockPriceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStockPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GeneratedClient.StockServiceSOAP.Price GetStockPriceResult;
        
        public GetStockPriceResponse() {
        }
        
        public GetStockPriceResponse(GeneratedClient.StockServiceSOAP.Price GetStockPriceResult) {
            this.GetStockPriceResult = GetStockPriceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StockPriceReq", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StockPriceReq {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Ticker;
        
        public StockPriceReq() {
        }
        
        public StockPriceReq(string Ticker) {
            this.Ticker = Ticker;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StockPriceSOAP", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StockPriceSOAP {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public System.DateTime CurrentTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public GeneratedClient.StockServiceSOAP.PriceDetails Price;
        
        public StockPriceSOAP() {
        }
        
        public StockPriceSOAP(System.DateTime CurrentTime, GeneratedClient.StockServiceSOAP.PriceDetails Price) {
            this.CurrentTime = CurrentTime;
            this.Price = Price;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockServiceChannel : GeneratedClient.StockServiceSOAP.IStockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockServiceClient : System.ServiceModel.ClientBase<GeneratedClient.StockServiceSOAP.IStockService>, GeneratedClient.StockServiceSOAP.IStockService {
        
        public StockServiceClient() {
        }
        
        public StockServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GeneratedClient.StockServiceSOAP.GetDDSResponse GetDDS(GeneratedClient.StockServiceSOAP.GetDDSRequest request) {
            return base.Channel.GetDDS(request);
        }
        
        public System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.GetDDSResponse> GetDDSAsync(GeneratedClient.StockServiceSOAP.GetDDSRequest request) {
            return base.Channel.GetDDSAsync(request);
        }
        
        public GeneratedClient.StockServiceSOAP.GetPriceWithDDSResponse GetPriceWithDDS(GeneratedClient.StockServiceSOAP.GetPriceWithDDSRequest request) {
            return base.Channel.GetPriceWithDDS(request);
        }
        
        public System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.GetPriceWithDDSResponse> GetPriceWithDDSAsync(GeneratedClient.StockServiceSOAP.GetPriceWithDDSRequest request) {
            return base.Channel.GetPriceWithDDSAsync(request);
        }
        
        public void OneWay(GeneratedClient.StockServiceSOAP.OneWay request) {
            base.Channel.OneWay(request);
        }
        
        public System.Threading.Tasks.Task OneWayAsync(GeneratedClient.StockServiceSOAP.OneWay request) {
            return base.Channel.OneWayAsync(request);
        }
        
        public GeneratedClient.StockServiceSOAP.NotOneWayResponse NotOneWay(GeneratedClient.StockServiceSOAP.NotOneWayRequest request) {
            return base.Channel.NotOneWay(request);
        }
        
        public System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.NotOneWayResponse> NotOneWayAsync(GeneratedClient.StockServiceSOAP.NotOneWayRequest request) {
            return base.Channel.NotOneWayAsync(request);
        }
        
        public GeneratedClient.StockServiceSOAP.GetStockPriceResponse GetStockPrice(GeneratedClient.StockServiceSOAP.GetStockPriceRequest request) {
            return base.Channel.GetStockPrice(request);
        }
        
        public System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.GetStockPriceResponse> GetStockPriceAsync(GeneratedClient.StockServiceSOAP.GetStockPriceRequest request) {
            return base.Channel.GetStockPriceAsync(request);
        }
        
        public GeneratedClient.StockServiceSOAP.StockPriceSOAP GetStockPriceSOAP(GeneratedClient.StockServiceSOAP.StockPriceReq request) {
            return base.Channel.GetStockPriceSOAP(request);
        }
        
        public System.Threading.Tasks.Task<GeneratedClient.StockServiceSOAP.StockPriceSOAP> GetStockPriceSOAPAsync(GeneratedClient.StockServiceSOAP.StockPriceReq request) {
            return base.Channel.GetStockPriceSOAPAsync(request);
        }
    }
}
